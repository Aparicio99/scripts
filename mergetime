#!/usr/bin/awk -f
function p(s)
{
	days = int(s / 86400)
	hours = int (s / 3600)
	mins = int((s -= hours * 3600) / 60)
	secs = s - mins * 60

	if (days > 0)
		return sprintf("%dd %dh %02dm %02ds", days, hours, mins, secs)
	if (hours > 0)
		return sprintf("%dh %02dm %02ds", hours, mins, secs)
	if (mins > 0)
		return sprintf("%dm %02ds", mins, secs)
	return sprintf("%ds", secs)
}

BEGIN {
	while (getline < "/var/log/emerge.log")
		if ($2 == ">>>" && $3 == "emerge") {
			sub("-[^-]*(-r[^-]*)? ", " ")
			pkg = $7
			start[pkg] = $1
		}
		else if ($2 == ">>>" && $3 == "unmerge") {
			sub("-[^-]*(-r[^-]*)?$", "")
			installed[$5] = 0
		}
		else if ($2 == ":::") {
			sub("-[^-]*(-r[^-]*)? ", " ")
			pkg = $8
			diff = $1 - start[pkg]

			if (start[pkg] == 0)
				continue
			else
				start[pkg] = 0

			if (diff < min[pkg] || min[pkg] == 0)
				min[pkg] = diff

			if (diff > max[pkg])
				max[pkg] = diff

			last[pkg] = diff

			sum[pkg] += diff
			count[pkg]++
			installed[pkg] = 1
		}

	sort = "sort -n"
	L = ARGV[1]
	for (pkg in sum)
		if (installed[pkg]) {
			L == "avg" ? l = sum[pkg]/count[pkg] : L == "max" ? l = max[pkg] : l = min[pkg]
			printf "%6d  %-40s %10s %15s %15s %15s %15s\n", l, pkg, p(min[pkg]), p(sum[pkg]/count[pkg]), p(max[pkg]), p(last[pkg]), p(sum[pkg]) |& sort
			sum_min += min[pkg]
			sum_avg += sum[pkg]/count[pkg]
			sum_max += max[pkg]
			sum_last += last[pkg]
			total += sum[pkg]
		}
	close(sort, "to")

	while (sort |& getline)
		print

	printf "----------------------------------------------------- min ----------- avg ----------- max ---------- last --------- total ---\n"
	printf "%6d  %-39s %10s %15s %15s %15s %15s\n", sum_min, "total", p(sum_min), p(sum_avg), p(sum_max), p(sum_last), p(total)
}
