#!/usr/bin/awk -f
function p(s)
{
	days = int(s / 86400)
	hours = int((s -= days * 86400) / 3600)
	mins = int((s -= hours * 3600) / 60)
	secs = s - mins * 60

	if (days > 0)
		return sprintf("%dd %dh %02dm %02ds", days, hours, mins, secs)
	if (hours > 0)
		return sprintf("%dh %02dm %02ds", hours, mins, secs)
	if (mins > 0)
		return sprintf("%dm %02ds", mins, secs)
	return sprintf("%ds", secs)
}

BEGIN {
	YELLOW="[0;33m"
	GRAY="[38;5;245m"
	NORMAL="[0m"

	while (getline < "/var/log/emerge.log")
		if ($2 == ">>>" && $3 == "emerge") {
			#sub("-[^-]*(-r[^-]*)? ", " ")
			pkg = $7
			start[pkg] = $1
		}
		else if ($2 == ">>>" && $3 == "unmerge") {
			#sub("-[^-]*(-r[^-]*)?$", "")
			installed[$5] = 0
		}
		else if ($2 == ":::") {
			#sub("-[^-]*(-r[^-]*)? ", " ")
			pkg = $8
			diff = $1 - start[pkg]

			if (start[pkg] == 0)
				continue
			else
				start[pkg] = 0

			if (diff < min[pkg] || min[pkg] == 0)
				min[pkg] = diff

			if (diff > max[pkg])
				max[pkg] = diff

			last[pkg] = diff

			sum[pkg] += diff
			count[pkg]++
			installed[pkg] = 1
		}

	sort = "sort -n"
	L = ARGV[1]
	for (pkg in sum)
		if (installed[pkg]) {

			switch (L) {
				case "min":
					l = min[pkg]
					break
				case "avg":
					l = sum[pkg]/count[pkg]
					break
				case "max":
					l = max[pkg]
					break
				default:
					l = last[pkg]
			}

			printf "%6d %s%15s %15s %15s %15s %15s    %s\n", l, color, p(last[pkg]), p(min[pkg]), p(sum[pkg]/count[pkg]), p(max[pkg]), p(sum[pkg]), pkg |& sort
			sum_min += min[pkg]
			sum_avg += sum[pkg]/count[pkg]
			sum_max += max[pkg]
			sum_last += last[pkg]
			total += sum[pkg]
		}
	close(sort, "to")

	i = 0
	while (sort |& getline) {
		if (++i % 8 == 0)
			printf "%s", NORMAL
		else if (i % 4 == 0)
			printf "%s", GRAY
		print
	}


	printf "%s", YELLOW
	printf "---------------- last ----------- min ----------- avg ----------- max --------- total ----------------------------------------\n"
	printf "%6d %15s %15s %15s %15s %15s    %s\n", sum_min, p(sum_last), p(sum_min), p(sum_avg), p(sum_max), p(total), "total"
}
