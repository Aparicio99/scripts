#!/bin/sh

source $HOME/.backups

mktimestamp() {
	date "+%Y-%m-%d-%H-%M"
}

tar_name() {
	echo "${1}-$(mktimestamp).tar.xz"
}

mktar() {
	local full_path=$1
	local top_dir=$(basename $full_path)
	local file="/tmp/$(tar_name $top_dir)"

	tar caf $file $full_path
	echo $file
}

rsync_backup() {
	local local_host=$(hostname)
	local backup_location=$RSYNC_BACKUP_DEST

	local dirs="$RSYNC_BACKUP_DIRS"

	local new="$local_host.$(date +%Y.%m.%d.%H.%M.%S)"

	echo "Backing up $dirs to ${backup_location}/${new}..."

	rsync --archive --one-file-system --human-readable --progress \
	      --numeric-ids --delete --delete-excluded \
	      --hard-links --links --safe-links \
	      --exclude-from=$RSYNC_EXCLUDE \
	      --include-from=$RSYNC_INCLUDE \
	      --link-dest=../${local_host}.last \
	      ${dirs} ${backup_location}/${new}

	local host=${backup_location%:*}
	local dir=${backup_location#*:}

	ssh $host ln -sfn ${dir}/${new} ${dir}/${local_host}.last
}

scp_backup() {
	for dir in "${TAR_BACKUP_DIRS[@]}"; do

		echo "Backing up $dir to ${TAR_BACKUP_DEST}..."

		file=$(mktar $dir)
		scp $file $TAR_BACKUP_DEST
		rm -f $file
	done
}

email_backup() {
	local files=""
	local dirs="${EMAIL_BACKUP_DIRS[@]}"

	for dir in $dirs; do
		file=$(mktar $dir)
		files="${files} $file"
	done

	echo "Backing up $dirs to ${EMAIL_BACKUP_DEST}..."
	if which mutt >/dev/null; then
		echo "Backup of $dirs" | mutt -s "Backup for $(hostname)" $EMAIL_BACKUP_DEST -a $files
	else
		echo "Mutt is not installed, backup failed."
	fi
	rm -f $files
}

for backup in $*; do

	case $backup in

		rsync)
			rsync_backup
			;;
		scp)
			scp_backup
			;;
		email)
			email_backup
			;;
		*)
			echo "Backup wat?"
			;;
	esac
done

