#!/bin/bash

function log() {
	echo "$@" | ts
}

function cpu_activity() {
	log "$(cat /proc/loadavg)"
	awk '{exit !($1 > 3 || $2 > 2 || $3 > 2)}' /proc/loadavg
}

function x_idle() {
	echo $(( $(xprintidle) / 1000 ))
}

function work_hours() {
	local hours=$(date +%_H)
	local week_day=$(date +%u)

	(( week_day > 5 )) && return 1

	(( hours < 9 || hours > 19 )) && return 1

	return 0
}

function no_screen_timeout() {
	local idle_time=$(x_idle)
	local timeout=300 # 5m

	work_hours && timeout=1800 # 30m

	log "$idle_time < $timeout ?"
	(( idle_time < timeout ))
}

function no_suspend_timeout() {
	local idle_time=$(x_idle)
	local timeout=1800 # 30m

	work_hours && timeout=5400 # 1h30m

	log "$idle_time < $timeout ???"
	(( idle_time < timeout ))
}

function away() {
	log "> stopping music"
	music stop

	if pidof xscrensaver >/dev/null; then
		log "> locking screen"
		xscreensaver-command -lock
	else
		log "> powering down screen"
		xset dpms force off
	fi
}

function off() {
	log "> suspend"
	echo mem > /sys/power/state
}

function daemon() {

	while :; do

		while :; do

			sleep 60

			if no_screen_timeout; then
				continue
			else
				log "No X activity for screen timeout"
				away
				break
			fi
		done

		log "Switching to suspend timeout loop"

		while :; do

			sleep 60

			if no_screen_timeout; then
				log "Recent X activity (screen)"
				break

			elif no_suspend_timeout; then
				log "Recent X activity (suspend)"
				continue

			elif cpu_activity; then
				log "Recent CPU activity ($(cat /proc/loadavg)), waiting 5m"
				sleep 5m
			else
				log "No X activity for suspend timeout"
				off
				break
			fi

		done

		log "Returning to screen timeout loop"
	done
}

case $1 in
	daemon ) daemon  ;;
	away   ) away    ;;
	off    ) off     ;;
	lock   ) away    ;;
	*      ) away    ;;
esac
